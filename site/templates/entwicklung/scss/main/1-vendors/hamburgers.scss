@charset "UTF-8";
/*!
 * Hamburgers
 * @description Tasty CSS-animated hamburgers
 * @author Jonathan Suh @jonsuh
 * @site https://jonsuh.com/hamburgers
 * @link https://github.com/jonsuh/hamburgers
 */

// Settings
// ==================================================
$hamburger-padding-x: 15px !default;
$hamburger-padding-y: 15px !default;
$hamburger-layer-width: 40px !default;
$hamburger-layer-height: 4px !default;
$hamburger-layer-spacing: 6px !default;
$hamburger-layer-color: #000 !default;
$hamburger-layer-border-radius: 4px !default;
$hamburger-hover-opacity: 0.7 !default;
$hamburger-hover-transition-duration: 0.15s !default;
$hamburger-hover-transition-timing-function: linear !default;

// To use CSS filters as the hover effect instead of opacity,
// set $hamburger-hover-use-filter as true and
// change the value of $hamburger-hover-filter accordingly.
$hamburger-hover-use-filter: false !default;
$hamburger-hover-filter: opacity(50%) !default;

// Types (Remove or comment out what you donâ€™t need)
// ==================================================
$hamburger-types: (
	3dx,
	3dx-r,
	3dy,
	3dy-r,
	arrow,
	arrow-r,
	arrowalt,
	arrowalt-r,
	boring,
	collapse,
	collapse-r,
	elastic,
	elastic-r,
	emphatic,
	emphatic-r,
	slider,
	slider-r,
	spring,
	spring-r,
	stand,
	stand-r,
	spin,
	spin-r,
	squeeze,
	vortex,
	vortex-r
) !default;

// Base Hamburger (We need this)
// ==================================================
@import "~hamburgers/_sass/hamburgers/_base";

// Hamburger types
// ==================================================
@import "~hamburgers/_sass/hamburgers/types/_3dx";
@import "~hamburgers/_sass/hamburgers/types/_3dx-r";
@import "~hamburgers/_sass/hamburgers/types/_3dy";
@import "~hamburgers/_sass/hamburgers/types/_3dy-r";
@import "~hamburgers/_sass/hamburgers/types/_arrow";
@import "~hamburgers/_sass/hamburgers/types/_arrow-r";
@import "~hamburgers/_sass/hamburgers/types/_arrowalt";
@import "~hamburgers/_sass/hamburgers/types/_arrowalt-r";
@import "~hamburgers/_sass/hamburgers/types/_boring";
@import "~hamburgers/_sass/hamburgers/types/_collapse";
@import "~hamburgers/_sass/hamburgers/types/_collapse-r";
@import "~hamburgers/_sass/hamburgers/types/_elastic";
@import "~hamburgers/_sass/hamburgers/types/_elastic-r";
@import "~hamburgers/_sass/hamburgers/types/_emphatic";
@import "~hamburgers/_sass/hamburgers/types/_emphatic-r";
@import "~hamburgers/_sass/hamburgers/types/_slider";
@import "~hamburgers/_sass/hamburgers/types/_slider-r";
@import "~hamburgers/_sass/hamburgers/types/_spring";
@import "~hamburgers/_sass/hamburgers/types/_spring-r";
@import "~hamburgers/_sass/hamburgers/types/_stand";
@import "~hamburgers/_sass/hamburgers/types/_stand-r";
@import "~hamburgers/_sass/hamburgers/types/_spin";
@import "~hamburgers/_sass/hamburgers/types/_spin-r";
@import "~hamburgers/_sass/hamburgers/types/_squeeze";
@import "~hamburgers/_sass/hamburgers/types/_vortex";
@import "~hamburgers/_sass/hamburgers/types/_vortex-r";

// ==================================================
// Cooking up additional types:
//
// The Sass for each hamburger type should be nested
// inside an @if directive to check whether or not
// it exists in $hamburger-types so only the CSS for
// included types are generated.
//
// e.g. hamburgers/types/_new-type.scss
//
// @if index($hamburger-types, new-type) {
//   .hamburger--new-type {
//     ...
//   }
// }

.dropdown-toggle.hamburger {
	&:after {
		display: none;
	}
}
